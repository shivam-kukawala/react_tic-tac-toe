[{"C:\\Users\\shiva\\Desktop\\tic-tac-toe\\src\\reportWebVitals.js":"1","C:\\Users\\shiva\\Desktop\\tic-tac-toe\\src\\index.js":"2","C:\\Users\\shiva\\Desktop\\tic-tac-toe\\src\\Game.js":"3","C:\\Users\\shiva\\Desktop\\tic-tac-toe\\src\\Board.js":"4"},{"size":362,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":501,"mtime":1606254623302,"results":"7","hashOfConfig":"6"},{"size":357,"mtime":1606271801104,"results":"8","hashOfConfig":"6"},{"size":3321,"mtime":1606271332843,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"qn45eu",{"filePath":"12","messages":"13","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"C:\\Users\\shiva\\Desktop\\tic-tac-toe\\src\\reportWebVitals.js",[],"C:\\Users\\shiva\\Desktop\\tic-tac-toe\\src\\index.js",["19","20"],"C:\\Users\\shiva\\Desktop\\tic-tac-toe\\src\\Game.js",[],"C:\\Users\\shiva\\Desktop\\tic-tac-toe\\src\\Board.js",["21","22","23"],"import React from 'react';\r\n\r\nfunction Square(props) {\r\n    return (\r\n      <button className=\"square\" onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n  }\r\n  \r\n  class Board extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        squares: Array(9).fill(null),\r\n        xIsNext: true,\r\n      };\r\n    }\r\n  \r\n    handleClick(i) {\r\n      var doubled = Array(9);  \r\n      var left = Array();\r\n      const squares = this.state.squares.slice();\r\n      if (calculateWinner(squares) || squares[i]) {\r\n        return;\r\n      }\r\n      if(this.state.xIsNext === false){\r\n        doubled = squares.map((e,index) => e === \"X\" || e === \"O\" ? 0 : index);\r\n         left = doubled.filter(e => e!== 0); \r\n  \r\n         var randomItem = left[Math.floor(Math.random()*left.length)];\r\n        console.log(randomItem);\r\n        squares[randomItem] = 'O';\r\n\r\n      }\r\n      else{\r\n        squares[i] = 'X' ;\r\n      }      \r\n      \r\n      this.setState({\r\n        squares: squares,\r\n        xIsNext: !this.state.xIsNext,\r\n      });                                            \r\n    }\r\n  \r\n    renderSquare(i) {\r\n      return (\r\n        <Square\r\n          value={this.state.squares[i]}\r\n          onClick={() => this.handleClick(i)}\r\n        />\r\n      );\r\n    }\r\n  \r\n    render() {\r\n      const winner = calculateWinner(this.state.squares);\r\n      var tie = tied(this.state.squares);\r\n      let status;\r\n      \r\n      if (winner) {\r\n        status = 'Winner: ' + winner;\r\n      }\r\n       else {\r\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        var tie = tied(this.state.squares);\r\n        console.log(tie);\r\n        if(tie === true){\r\n            status = \"Match Tied\";\r\n        }\r\n        if (this.state.xIsNext === false) {\r\n            this.handleClick();\r\n            \r\n        }\r\n      }\r\n  \r\n      return (\r\n        <div>\r\n          <div className=\"status\">{status}</div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  function calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function tied(squares){\r\n    var count = 0;\r\n\r\n      console.log(squares);\r\n      console.log(count);\r\n      for(let j =0; j<=squares.length; j++){\r\n          if(squares[j] === null ){\r\n              count++;\r\n              console.log(count);\r\n              \r\n          }\r\n          \r\n        }\r\n\r\n\r\n    if(count == 0){\r\n        return true;\r\n    }\r\n\r\n  }\r\n\r\n  export default Board;",{"ruleId":"24","severity":1,"message":"25","line":4,"column":8,"nodeType":"26","messageId":"27","endLine":4,"endColumn":11},{"ruleId":"28","severity":2,"message":"29","line":9,"column":6,"nodeType":"30","endLine":9,"endColumn":10},{"ruleId":"31","severity":1,"message":"32","line":22,"column":18,"nodeType":"33","messageId":"34","endLine":22,"endColumn":25},{"ruleId":"35","severity":1,"message":"36","line":65,"column":13,"nodeType":"26","messageId":"37","endLine":65,"endColumn":16},{"ruleId":"38","severity":1,"message":"39","line":134,"column":14,"nodeType":"40","messageId":"41","endLine":134,"endColumn":16},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","react/jsx-no-undef","'Game' is not defined.","JSXIdentifier","no-array-constructor","The array literal notation [] is preferable.","CallExpression","preferLiteral","no-redeclare","'tie' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]